# General info: https://docs.gitlab.com/ee/ci/yaml/
#
# Requires several environment variables to be set in Git.UP (most should be protected):
#  * SSH_DEPLOY_HOSTS (one host per line, if multiple)
#  * SSH_DEPLOY_KEY (SSH-key for the gitup-deploy user)
#  * SSH_KNOWN_HOSTS (hosts keys of the servers to which the artifacts should be deployed; `ssh-keyscan hostname`)
# except SSH_DEPLOY_HOSTS and SSH_DEPLOY_KEY all variables can be set in the Group

image: node:12

stages:
  - prepare
  - build
  - deploy

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - node_modules/
    - .npm/

install_dependencies:
  stage: prepare
  script:
    - npm ci --cache .npm --prefer-offline
    - npm install
  artifacts:
    paths:
      - node_modules/
    expire_in: 1 day

.build:
  stage: build
  script:
    - npm install -g cordova ionic
    - ionic cordova platform add browser
    - ionic cordova prepare browser
    - ionic cordova build browser --release

# only used for merge requests (and branches != master in order to avoid double building)
build-test:
  extends: .build
  # keep built artifacts on Git.UP for one day for manual testing/inspection
  artifacts:
    paths:
      - platforms/browser/www/
    expire_in: 1 day
  except:
    refs:
      - master
      - tags

# special job for building and keeping the artifacts for production, only executed for master
build-production:
  extends: .build
  # keep built artifacts on Git.UP, only do this for builds on master branch we want to deploy in order to save space on Git.UP
  artifacts:
    paths:
      - platforms/browser/www/
  only:
    - master
  except:
    refs:
      - tags

deploy-production:
  stage: deploy
  cache: {}
  dependencies:
    - build-production
  before_script:
    - mkdir /root/.ssh
    - chmod 700 /root/.ssh
    - echo "$SSH_DEPLOY_KEY" | tr -d '\r' > /root/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - apt-get update && apt-get install -y jq
    - ./deploy
  # uncomment to only deploy manually and not on every push
  #when: manual
  #allow_failure: false
  only:
    - master
  except:
    refs:
      - tags
